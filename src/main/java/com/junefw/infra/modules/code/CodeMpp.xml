<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.junefw.infra.modules.code.CodeMpp">	<!-- 지금 파일 지정 -->

    <resultMap id="resultMapObj" type="com.junefw.infra.modules.code.Code"></resultMap> <!-- 결과 객체 저장 -->
    
    <sql id="selectCommon">
    	FROM 
			rb.infrcodegroup a
		WHERE 1=1
			<choose>
				<when test="shIfcgDelNy == 1">AND ifcgDelNy = 1</when>
				<when test="shIfcgDelNy == 0">AND ifcgDelNy = 0</when>
			</choose>
			<if test="shIfcgName != null and !shIfcgName.equals('')"> AND ifcgName LIKE concat('%',#{shIfcgName},'%')</if>
			<choose>
				<when test="shOption == 1">AND ifcgName LIKE concat('%',#{shValue},'%')</when>
				<when test="shOption == 2">AND ifcgNameEng LIKE concat('%',#{shValue},'%')</when>
			</choose>
    </sql>
    
    <select id="selectOneCount" resultType="Integer">
    	SELECT
			count(*)
		<include refid="selectCommon" />
    </select>

	<select id="selectList" resultMap="resultMapObj">
		SELECT
			a.ifcgSeq
			, a.ifcgName
			, a.ifcgNameEng
			, a.ifcgDelNy
		<include refid="selectCommon" />
		ORDER BY ifcgSeq DESC 
		limit #{startRnumForMysql}, #{rowNumToShow}
	</select>
	
	<select id="selectAllList" resultMap="resultMapObj">
		SELECT
			a.ifcgSeq
			, a.ifcgName
			, a.ifcgNameEng
			, a.ifcgDelNy
		FROM 
			rb.infrcodegroup a
	</select>
	
	<select id="searchList" resultMap="resultMapObj">
		SELECT
			a.ifcgSeq
			, a.ifcgName
			, a.ifcgDelNy
		FROM 
			rb.infrcodegroup a
		WHERE 1=1
			AND ifcgDelNy = 0
			AND ifcgName = #{shIfcgName}
	</select>
	
	<insert id="insert">
		INSERT INTO infrCodeGroup(
			ifcgName
			, ifcgDelNy
		) VALUES (
			#{ifcgName}
			,0
		)
		<selectKey resultType="string" keyProperty="ifcgSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			a.ifcgSeq
			, a.ifcgName
			, a.ifcgDelNy
		FROM 
			rb.infrcodegroup a
		WHERE 1=1
			AND ifcgSeq = #{ifcgSeq}
	</select>
	
	<update id="update">
		UPDATE
			rb.infrcodegroup a
		SET
			a.ifcgName = #{ifcgChangeName}
		WHERE 1=1
			AND ifcgSeq = #{ifcgSeq}
	</update>
	
	<update id="update2">
		UPDATE
			rb.infrcodegroup
		SET 
			ifcgName = #{ifcgName}
		WHERE 1=1
			AND ifcgSeq = #{ifcgSeq}
	</update>
	
	<update id="updateDelete">
		UPDATE 
			infrCodeGroup 
		SET 
			ifcgDelNy = 1
		WHERE 1=1
			AND ifcgSeq = #{ifcgSeq}
	</update>
	
	<delete id="delete">
		DELETE
		FROM 
			infrCodeGroup
		WHERE 1=1
			AND ifcgSeq = #{ifcgSeq}
	</delete>
	
	<!-- code -->
	
	 <sql id="selectCodeCommon">
    	FROM 
			rb.infrcode a
		WHERE 1=1
			<!-- AND ifcdDelNy = 0 -->
			<choose>
				<when test="shIfcdDelNy == 1">AND ifcdDelNy = 1</when>
				<when test="shIfcdDelNy == 0">AND ifcdDelNy = 0</when>
			</choose>
			<if test="shIfcgSeq != null and !shIfcgSeq.equals('')"> AND ifcgSeq = #{shIfcgSeq}</if>
			<if test="shIfcdName != null and !shIfcdName.equals('')"> AND ifcdName LIKE concat('%',#{shIfcdName},'%')</if>
    </sql>
	
	<select id="selectCodeOneCount" resultType="Integer">
    	SELECT
			count(*)
		<include refid="selectCodeCommon" />
    </select>
	
	<select id="selectCodeList" resultMap="resultMapObj">
		SELECT
			a.ifcdSeq
			, a.ifcdName
			, a.ifcdDelNy
			, (select ifcgName from infrCodeGroup where a.ifcgSeq = infrCodeGroup.ifcgSeq) as ifcgName
		<include refid="selectCodeCommon" />
		limit #{startRnumForMysql}, #{rowNumToShow}
	</select>
	
	<select id="selectCodeOne" resultMap="resultMapObj">
		SELECT
			a.ifcdSeq
			, a.ifcdName
			, a.ifcdDelNy
			, a.ifcdOriginalFileName
			, a.ifcdUuidFileName
		FROM 
			rb.infrcode a
		WHERE 1=1
			AND ifcdSeq = #{ifcdSeq}
	</select>
	<insert id="insertCode">
		INSERT INTO infrCode(
			ifcdName
			, ifcdDelNy
			, ifcgSeq
			, ifcdOriginalFileName
			, ifcdUuidFileName
		) VALUES (
			#{ifcdName}
			,0
			,#{ifcgSeq}
			, #{ifcdOriginalFileName}
			, #{ifcdUuidFileName}
		)
	</insert>
	<update id="updateCode">
		UPDATE
			rb.infrcode
		SET 
			ifcdName = #{ifcdName}
		WHERE 1=1
			AND ifcdSeq = #{ifcdSeq}
	</update>
	
	<select id="selectListForCache" resultMap="resultMapObj">
		SELECT
			a.ifcdSeq
			, a.ifcdName
			, a.ifcdOrder
			, a.ifcdDelNy
			, a.ifcgSeq
		FROM
			rb.infrcode a
		WHERE 1=1
			AND ifcdDelNy = 0
			AND ifcdUseNy = 1
	</select>
</mapper>